#!/bin/bash
set -e

# Step 0: Create user and prepare workspace
if ! id "forgeuser" &>/dev/null; then
    useradd -m forgeuser
fi

mkdir -p /workspace
chown -R forgeuser:forgeuser /workspace

# Step 1: System setup (run as root for apt installs)
apt update && apt install -y \
    python3 python3-pip git-lfs wget curl git unzip \
    sudo software-properties-common openssh-client nodejs npm jq

if ! command -v python &> /dev/null; then
    ln -s /usr/bin/python3 /usr/bin/python
fi

# Step 2: Run remaining setup as forgeuser
su - forgeuser -c bash <<'EOF'
set -e

# Gradio environment
mkdir -p /workspace/.gradio/frpc
chmod -R 777 /workspace/.gradio
export GRADIO_FRPC_BINARY=/workspace/.gradio/frpc/frpc_linux_amd64_v0.3
export GRADIO_CACHE_DIR=/workspace/.gradio
export GRADIO_TEMP_DIR=/workspace/.gradio

# Download tunnel binary
wget -q --show-progress -O $GRADIO_FRPC_BINARY \
  https://cdn-media.huggingface.co/frpc-gradio-0.3/frpc_linux_amd64
chmod +x $GRADIO_FRPC_BINARY

# Install Gradio locally
pip3 install --user gradio

# Clone and build SwarmUI
rm -rf /workspace/SwarmUI
git clone https://github.com/mcmonkeyprojects/SwarmUI.git /workspace/SwarmUI
cd /workspace/SwarmUI
dotnet publish -c Release -o publish || dotnet build

# Download WAN2.1 models
cd /workspace/SwarmUI/Models
mkdir -p diffusion_models/WAN2.1
cd diffusion_models/WAN2.1
HF_TOKEN="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"

for url in \
  clip_vision/clip_vision_h.safetensors \
  vae/wan_2.1_vae.safetensors \
  diffusion_models/wan2.1_i2v_720p_14B_fp16.safetensors \
  diffusion_models/wan2.1_t2v_14B_fp16.safetensors \
  diffusion_models/wan2.1_vace_14B_fp16.safetensors; do

  wget --header="Authorization: Bearer $HF_TOKEN" \
    -O "$(basename $url)" \
    "https://huggingface.co/Comfy-Org/Wan_2.1_ComfyUI_repackaged/resolve/main/split_files/$url"
done

# Create Gradio script
cat <<PY > /workspace/SwarmUI/launch_gradio.py
import os
os.environ["GRADIO_FRPC_BINARY"] = "$GRADIO_FRPC_BINARY"
os.environ["GRADIO_CACHE_DIR"] = "$GRADIO_CACHE_DIR"
os.environ["GRADIO_TEMP_DIR"] = "$GRADIO_TEMP_DIR"
import gradio as gr, requests

def call_api(endpoint="i2v", prompt="A dog running in the rain"):
    url = f"http://localhost:5000/api/{endpoint}?prompt=" + prompt
    try: return requests.get(url).json()
    except Exception as e: return {"error": str(e)}

gr.Interface(fn=call_api,
    inputs=[gr.Dropdown(["i2v", "t2v", "vace"], label="Model"), gr.Textbox(label="Prompt")],
    outputs="json", title="WAN 2.1 API Gateway"
).launch(share=True, server_name="0.0.0.0", server_port=7860)
PY

# Launch Gradio
nohup python3 /workspace/SwarmUI/launch_gradio.py > /workspace/gradio_output.log 2>&1 &
EOF

# Step 3: Share Gradio URL (run as root)
sleep 20
PUBLIC_URL=$(grep -o 'https://.*\.gradio\.live' /workspace/gradio_output.log | head -n 1)
echo "$PUBLIC_URL" > /workspace/share_url.txt

if [[ -n "$PUBLIC_URL" ]]; then
    curl -G https://n8n.ifeatuo.com/videohooks \
         --data-urlencode "share_url=$PUBLIC_URL"
fi

# Step 4: Watchdog
cat <<'EOF' > /workspace/watch_bid.sh
#!/bin/bash
while true; do
  status=$(curl -s http://localhost:1337/status | jq -r '.outbid')
  if [[ "$status" == "true" ]]; then shutdown now; fi
  sleep 60
done
EOF
chmod +x /workspace/watch_bid.sh
nohup bash /workspace/watch_bid.sh > /workspace/watchdog.log 2>&1 &
